FROM node:18-alpine
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
EXPOSE 5173
CMD ["npm", "run", "dev", "--", "--host","0.0.0.0"]



flask

FROM python:3.12
WORKDIR /app
COPY requirements.txt . 
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
EXPOSE 5000
ENV FLASK APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0
CMD ["flask","run"]



from flask import Flask
#intialization flask with a parameter and store it in var
app=Flask(__name__)
@app.route('/')
def index():
    return "Hello, World!"
if __name__ == "__main__":
    app.run(host='0.0.0.0',port=5000)



Node:-

export const handler = async (event) => {
  const number = event.number || 0; 
  const result = number % 2 === 0 ? "Even" : "Odd";

  return {
    statusCode: 200,
    body: JSON.stringify({ number, result }),
  };
};

Python width and height:
import json

def lambda_handler(event, context):
    length = event.get('length', 0)  # Use .get() to avoid KeyError
    width = event.get('width', 0)

    area = length * width

    return {
        "statusCode": 200,
        "body": json.dumps({"area": area})  # Proper JSON response format
    }


Python odd and even:
import json

def lambda_handler(event, context):
    number = event.get('number', 0)  # Get the number from the event

    result = "Even" if number % 2 == 0 else "Odd"

    return {
        "statusCode": 200,
        "body": json.dumps({"number": number, "result": result})
    }

